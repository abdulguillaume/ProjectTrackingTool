@model ProjectTrackingTool.Models.Customer
@using ProjectTrackingTool.Models

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<ProjectTrackingTool.Models.ContactType> contact_types = ViewBag.ContactTypes;

    List<CustomerType> customer_types = ViewBag.CustomerTypes;
}

<h2>Edit</h2>


@using (
    //Html.BeginForm()
    Html.BeginForm("Edit", "Customer", FormMethod.Post, new { id = "customer_form" })
    )
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Customer_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Customer_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                <fieldset>
                    <header>Customer type</header>


                    @{

                            foreach (var type in customer_types)
                            {
                                    @Html.RadioButtonFor(model => model.Customer_Type.Customer_Type_Id, @type.Customer_Type_Id)
                                                @: @type.Customer_Type_Name <br />
                            }

                    }

                        @Html.ValidationMessageFor(model => model.Customer_Type.Customer_Type_Id, "", new { @class = "text-danger" })

                    @*

            @Html.HiddenFor(model =>@Html.HiddenFor(model => model.Customer_Type.Customer_Type_Id) model.Customer_Type.Customer_Type_Name)

            @for(int cnt=0; cnt < Model.Contact_Info.Count; cnt++)
            {
                @Html.HiddenFor(model => model.Contact_Info[cnt].Contact_Info_Id)
                @Html.HiddenFor(model => model.Contact_Info[cnt].type.Contact_Type_Id)

                <input type="hidden" name="Contact_Info[@cnt].Contact_Info_Id" value="@Model.Contact_Info[cnt].Contact_Info_Id" />
            }*@


                    @*<table>
                <tr>
                    @{
                        List<ProjectTrackingTool.Models.CustomerType> customer_types = ViewBag.CustomerTypes;

                        foreach (var type in customer_types)
                        {
                            <td>
                                <input type="checkbox" name="selectedCustomerType" value="@type.Customer_Type_Id"
                                       @(Html.Raw(Model.Customer_Type.Customer_Type_Id == @type.Customer_Type_Id ? "checked=\"checked\"" : ""))
                                        /> @type.Customer_Type_Name
                            </td>
                        }
                    }
                </tr>
            </table>*@

                    </fieldset>
</div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Contact_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <fieldset>
                    <header>Contact Information</header>
                    <table id="contact-info" class="table">
                        <tr>
                            <th>Type</th>
                            <th>Info.</th>
                            <th><a href="#" id="add">+</a></th>
                        </tr>
                        
                        @for (var i = 0; Model.Contact_Info != null && i < Model.Contact_Info.Count; i++)
                        {
                            <tr>
                                <td>

                               @Html.DropDownListFor(model => model.Contact_Info[i].type.Contact_Type_Id,
                                        contact_types.Select( x => new SelectListItem() { Value=x.Contact_Type_Id.ToString(), Text=x.Contact_Type_Name}))
                                 @Html.ValidationMessageFor(model => model.Contact_Info[i].type.Contact_Type_Id, "", new { @class = "text-danger" })                                               
                                </td>
                                <td>
                                    @Html.EditorFor(model=> model.Contact_Info[i].detail)
                                    @*<input type="text" name="inputContactInfo" value="@contact_info.detail" />*@
                                    @Html.ValidationMessageFor(model => model.Contact_Info[i].detail, "", new { @class = "text-danger" })
                                </td>
                                <td><a href="#" class="rem">-</a></td>
                            </tr>
                        }
                    </table>
                </fieldset>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<table id="contact-info-hidden">
    <tr>
        <td>
            <select class="valid" data-val="true" data-val-required="*Required*" value="">
                @{

                    <option value="">--select--</option>
                    foreach (var type in contact_types)
                    {
                        <option value="@type.Contact_Type_Id" /> @type.Contact_Type_Name
                    }
                }
            </select>
            <span class="span_1 field-validation-valid text-danger" data-valmsg-for="" data-valmsg-replace="true"></span>  
        </td>
        <td>
            <input type="text" class="text-box single-line" data-val="true" data-val-required="The Contact Info field is required" value="" />
            
            <span class="span_3 text-danger field-validation-valid" data-valmsg-for="" data-valmsg-replace="true"></span> 
        </td>
        <td><a href="#" class="rem">-</a></td>
    </tr>
</table>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
