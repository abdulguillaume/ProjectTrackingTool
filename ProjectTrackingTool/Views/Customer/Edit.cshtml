@model ProjectTrackingTool.Models.Customer

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    List<ProjectTrackingTool.Models.ContactType> contact_types = ViewBag.ContactTypes;
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Customer</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Customer_Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Customer_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Customer_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Customer_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">

                

                @*

                @Html.HiddenFor(model =>@Html.HiddenFor(model => model.Customer_Type.Customer_Type_Id) model.Customer_Type.Customer_Type_Name)

                @for(int cnt=0; cnt < Model.Contact_Info.Count; cnt++)
                {
                    @Html.HiddenFor(model => model.Contact_Info[cnt].Contact_Info_Id)
                    @Html.HiddenFor(model => model.Contact_Info[cnt].type.Contact_Type_Id)

                    <input type="hidden" name="Contact_Info[@cnt].Contact_Info_Id" value="@Model.Contact_Info[cnt].Contact_Info_Id" />
                }*@

 
                <table>
                    <tr>
                        @{
                            List<ProjectTrackingTool.Models.CustomerType> customer_types = ViewBag.CustomerTypes;
                            
                            foreach (var type in customer_types)
                            {
                                <td>
                                    <input type="checkbox" name="selectedCustomerType" value="@type.Customer_Type_Id"
                                           @(Html.Raw(Model.Customer_Type.Customer_Type_Id == @type.Customer_Type_Id ? "checked=\"checked\"" : ""))
                                            /> @type.Customer_Type_Name
                                </td>
                            }
                        }
                    </tr>
                </table>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Contact_Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact_Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact_Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <fieldset>
                    <header>Contact Information</header>
                    <table id="contact-info" class="table">
                        <tr>
                            <th>Type</th>
                            <th>Info.</th>
                            <th><a href="#" id="add">+</a></th>
                        </tr>
                        @foreach (var contact_info in Model.Contact_Info)
                        {
                            <tr>
                                <td>
                                    <select name="selectedContactType">
                                    
                                        @{
                            //List<ProjectTrackingTool.Models.ContactType> contact_types = ViewBag.ContactTypes;
                            
                            foreach (var type in contact_types)
                            {
                                <option value="@type.Contact_Type_Id"
                                        @(Html.Raw(@contact_info.type.Contact_Type_Id == @type.Contact_Type_Id ? "selected" : ""))
                                         /> @type.Contact_Type_Name
                            }

                                    }
                                        @*<option value="@contact_info.type.Contact_Type_Id">@contact_info.type.Contact_Type_Name</option>*@
                                    </select>
                                </td>
                                <td>
                                    <input type="hidden" name="contactInfoID" value="@contact_info.Contact_Info_Id" />
                                    <input type="text" name="inputContactInfo" value="@contact_info.detail" />
                                </td>
                                <td><a href="#" class="rem">-</a></td>
                            </tr>
                        }
                    </table>
                </fieldset>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<table id="contact-info-hidden">
    <tr>
        <td>
            <select name="selectedContactType">
                @{
                    
                    <option>--select--</option>
                    foreach (var type in contact_types)
                    {
                        <option value="@type.Contact_Type_Id" /> @type.Contact_Type_Name
                    }
                }
            </select>
        </td>
        <td>
            <input type="hidden" name="contactInfoID" value="0" />
            <input type="text" name="inputContactInfo" />
        </td>
        <td><a href="#" class="rem">-</a></td>
    </tr>
</table>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
